rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Allow users to read/write their own user documents
    match /users/{userId} {
      allow read: if true; // Public profiles
      allow write: if isOwner(userId);
    }
    
    // Boards rules
    match /boards/{boardId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        resource.data.isPublic == true ||
        request.auth.uid in resource.data.collaborators
      );
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        request.auth.uid in resource.data.collaborators
      );
      allow delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
    
    // Saved blocks rules - IMPORTANT: Check request.resource for create
    match /savedBlocks/{blockId} {
      // For reading existing blocks
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        resource.data.isPublic == true
      );
      
      // For creating new blocks - check request.resource.data
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      // For updating existing blocks
      allow update: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      
      // For deleting blocks
      allow delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
  }
}